{"ast":null,"code":"import { connect } from 'react-redux';\nimport AddOrganization from \"../../components/organization/AddOrganization\";\nimport { CLEAR_CREATE_ORGANIZATION_FIELDS, ORG_DATA_ADDRESS_LINE_1, ORG_DATA_ADDRESS_LINE_2, ORG_DATA_CITY, ORG_DATA_COUNTRY, ORG_DATA_DESC, ORG_DATA_NAME, ORG_DATA_PIN_TYPE, ORG_DATA_STATE, ORG_DATA_ZIP, SET_CREATE_ORGANIZATION_FIELD } from \"../../reducers/CreateOrganizationDataReducer\";\nimport { doPostNewOrganization } from \"../../actions/profileApi\";\nimport { API_STATUS_IN_PROGRESS, CREATE_ORG_API_STATUS_KEY } from \"../../reducers/CreateOrgApiStatus\";\nimport { SET_ORG_VALIDATION_STATE } from \"../../reducers/OrganizationCreationValidationReducer\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var orgData = state.createOrgData;\n  return {\n    orgName: orgData.get(ORG_DATA_NAME),\n    orgDesc: orgData ? orgData.get(ORG_DATA_DESC) : \"\",\n    orgPinType: orgData ? orgData.get(ORG_DATA_PIN_TYPE) : null,\n    orgAddressLine1: orgData ? orgData.get(ORG_DATA_ADDRESS_LINE_1) : \"\",\n    orgAddressLine2: orgData ? orgData.get(ORG_DATA_ADDRESS_LINE_2) : \"\",\n    orgCity: orgData ? orgData.get(ORG_DATA_CITY) : \"\",\n    orgState: orgData ? orgData.get(ORG_DATA_STATE) : \"\",\n    orgZip: orgData ? orgData.get(ORG_DATA_ZIP) : \"\",\n    orgCountry: orgData ? orgData.get(ORG_DATA_COUNTRY) : \"\",\n    isCreatingOrg: state.createOrgApiStatus.get(CREATE_ORG_API_STATUS_KEY) === API_STATUS_IN_PROGRESS,\n    orgValidation: state.orgFormValidation\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setOrgName: function setOrgName(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_NAME,\n        value: event.target.value\n      });\n    },\n    setOrgDesc: function setOrgDesc(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_DESC,\n        value: event.target.value\n      });\n    },\n    setOrgPinType: function setOrgPinType(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_PIN_TYPE,\n        value: event.target.value\n      });\n    },\n    setOrgAddressLine1: function setOrgAddressLine1(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_ADDRESS_LINE_1,\n        value: event.target.value\n      });\n    },\n    setOrgAddressLine2: function setOrgAddressLine2(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_ADDRESS_LINE_2,\n        value: event.target.value\n      });\n    },\n    setOrgCity: function setOrgCity(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_CITY,\n        value: event.target.value\n      });\n    },\n    setOrgState: function setOrgState(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_STATE,\n        value: event.target.value.toUpperCase()\n      });\n    },\n    setOrgZip: function setOrgZip(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_ZIP,\n        value: event.target.value\n      });\n    },\n    setOrgCountry: function setOrgCountry(event) {\n      dispatch({\n        type: SET_CREATE_ORGANIZATION_FIELD,\n        key: ORG_DATA_COUNTRY,\n        value: event.target.value\n      });\n    },\n    createNewOrg: function createNewOrg() {\n      return dispatch(doPostNewOrganization);\n    },\n    clearFormFields: function clearFormFields() {\n      return dispatch({\n        type: CLEAR_CREATE_ORGANIZATION_FIELDS\n      });\n    },\n    setOrgValidationState: function setOrgValidationState(key, value) {\n      return dispatch({\n        type: SET_ORG_VALIDATION_STATE,\n        key: key,\n        value: value\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrganization);","map":{"version":3,"sources":["/development/bigcats/pathforward-web/src/containers/organization/AddOrganizationContainer.js"],"names":["connect","AddOrganization","CLEAR_CREATE_ORGANIZATION_FIELDS","ORG_DATA_ADDRESS_LINE_1","ORG_DATA_ADDRESS_LINE_2","ORG_DATA_CITY","ORG_DATA_COUNTRY","ORG_DATA_DESC","ORG_DATA_NAME","ORG_DATA_PIN_TYPE","ORG_DATA_STATE","ORG_DATA_ZIP","SET_CREATE_ORGANIZATION_FIELD","doPostNewOrganization","API_STATUS_IN_PROGRESS","CREATE_ORG_API_STATUS_KEY","SET_ORG_VALIDATION_STATE","mapStateToProps","state","orgData","createOrgData","orgName","get","orgDesc","orgPinType","orgAddressLine1","orgAddressLine2","orgCity","orgState","orgZip","orgCountry","isCreatingOrg","createOrgApiStatus","orgValidation","orgFormValidation","mapDispatchToProps","dispatch","setOrgName","event","type","key","value","target","setOrgDesc","setOrgPinType","setOrgAddressLine1","setOrgAddressLine2","setOrgCity","setOrgState","toUpperCase","setOrgZip","setOrgCountry","createNewOrg","clearFormFields","setOrgValidationState"],"mappings":"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","sourcesContent":["import {connect}        from 'react-redux';\nimport AddOrganization from \"../../components/organization/AddOrganization\";\nimport {\n    CLEAR_CREATE_ORGANIZATION_FIELDS,\n    ORG_DATA_ADDRESS_LINE_1, ORG_DATA_ADDRESS_LINE_2, ORG_DATA_CITY, ORG_DATA_COUNTRY,\n    ORG_DATA_DESC, ORG_DATA_NAME, ORG_DATA_PIN_TYPE, ORG_DATA_STATE, ORG_DATA_ZIP,\n    SET_CREATE_ORGANIZATION_FIELD\n} from \"../../reducers/CreateOrganizationDataReducer\";\nimport {doPostNewOrganization} from \"../../actions/profileApi\"\nimport {API_STATUS_IN_PROGRESS, CREATE_ORG_API_STATUS_KEY} from \"../../reducers/CreateOrgApiStatus\";\nimport {SET_ORG_VALIDATION_STATE} from \"../../reducers/OrganizationCreationValidationReducer\";\n\nconst mapStateToProps = (state) => {\n    const orgData = state.createOrgData;\n    return {\n        orgName: orgData.get(ORG_DATA_NAME),\n        orgDesc: orgData ? orgData.get(ORG_DATA_DESC) : \"\",\n        orgPinType: orgData ? orgData.get(ORG_DATA_PIN_TYPE) : null,\n        orgAddressLine1: orgData ? orgData.get(ORG_DATA_ADDRESS_LINE_1) : \"\",\n        orgAddressLine2: orgData ? orgData.get(ORG_DATA_ADDRESS_LINE_2) : \"\",\n        orgCity: orgData ? orgData.get(ORG_DATA_CITY) : \"\",\n        orgState: orgData ? orgData.get(ORG_DATA_STATE) : \"\",\n        orgZip: orgData ? orgData.get(ORG_DATA_ZIP) : \"\",\n        orgCountry: orgData ? orgData.get(ORG_DATA_COUNTRY) : \"\",\n        isCreatingOrg: state.createOrgApiStatus.get(CREATE_ORG_API_STATUS_KEY) === API_STATUS_IN_PROGRESS,\n        orgValidation: state.orgFormValidation\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    setOrgName: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_NAME, value: event.target.value})\n    },\n    setOrgDesc: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_DESC, value: event.target.value})\n    },\n    setOrgPinType: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_PIN_TYPE, value: event.target.value})\n    },\n    setOrgAddressLine1: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_ADDRESS_LINE_1, value: event.target.value})\n    },\n    setOrgAddressLine2: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_ADDRESS_LINE_2, value: event.target.value})\n    },\n    setOrgCity: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_CITY, value: event.target.value})\n    },\n    setOrgState: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_STATE, value: event.target.value.toUpperCase()})\n    },\n    setOrgZip: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_ZIP, value: event.target.value})\n    },\n    setOrgCountry: (event) => {\n        dispatch({type: SET_CREATE_ORGANIZATION_FIELD, key: ORG_DATA_COUNTRY, value: event.target.value})\n    },\n    createNewOrg: () => dispatch(doPostNewOrganization),\n    clearFormFields: () => dispatch({type: CLEAR_CREATE_ORGANIZATION_FIELDS}),\n    setOrgValidationState: (key, value) => dispatch({type: SET_ORG_VALIDATION_STATE, key, value})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrganization);\n"]},"metadata":{},"sourceType":"module"}