{"ast":null,"code":"import _classCallCheck from \"/development/bigcats/pathforward-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/development/bigcats/pathforward-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/development/bigcats/pathforward-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/development/bigcats/pathforward-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/development/bigcats/pathforward-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/development/bigcats/pathforward-web/src/components/auth/ProtectedRoutes.jsx\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport MyProfile from \"../../containers/profile/MyProfileContainer\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { ROUTE_LOGIN } from \"../RootComponent\";\nimport OrganizationContainer from \"../../containers/organization/OrganizationContainer\";\nimport LogoutContainer from \"../../containers/auth/LogoutContainer\";\nimport AddOrganizationContainer from \"../../containers/organization/AddOrganizationContainer\";\nexport var ROUTE_MY_PROFILE = '/profile';\nexport var ROUTE_ORGANIZATION = '/org';\nexport var ROUTE_LOGOUT = '/logout';\n\nvar ProtectedRoutes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProtectedRoutes, _React$Component);\n\n  function ProtectedRoutes(props) {\n    var _this;\n\n    _classCallCheck(this, ProtectedRoutes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProtectedRoutes).call(this, props));\n    var isAuthenticated = props.isAuthenticated,\n        setIntendedPathAsRedirectPath = props.setIntendedPathAsRedirectPath;\n\n    if (!isAuthenticated) {\n      setIntendedPathAsRedirectPath();\n    }\n\n    return _this;\n  }\n\n  _createClass(ProtectedRoutes, [{\n    key: \"render\",\n    value: function render() {\n      var isAuthenticated = this.props.isAuthenticated;\n\n      if (!isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: ROUTE_LOGIN,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: ROUTE_MY_PROFILE,\n        component: MyProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(ROUTE_ORGANIZATION, \"/:id\"),\n        component: OrganizationContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(ROUTE_ORGANIZATION),\n        component: AddOrganizationContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(ROUTE_LOGOUT),\n        component: LogoutContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: ROUTE_MY_PROFILE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProtectedRoutes;\n}(React.Component);\n\nProtectedRoutes.displayName = 'ProtectedRoutes';\nProtectedRoutes.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  setIntendedPathAsRedirectPath: PropTypes.func.isRequired\n};\nexport default connect(null)(ProtectedRoutes);","map":{"version":3,"sources":["/development/bigcats/pathforward-web/src/components/auth/ProtectedRoutes.jsx"],"names":["connect","React","MyProfile","Redirect","Route","Switch","PropTypes","ROUTE_LOGIN","OrganizationContainer","LogoutContainer","AddOrganizationContainer","ROUTE_MY_PROFILE","ROUTE_ORGANIZATION","ROUTE_LOGOUT","ProtectedRoutes","props","isAuthenticated","setIntendedPathAsRedirectPath","Component","displayName","propTypes","bool","func","isRequired"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,qBAAP,MAAkC,qDAAlC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,wBAAP,MAAqC,wDAArC;AAEA,OAAO,IAAMC,gBAAgB,GAAG,UAAzB;AACP,OAAO,IAAMC,kBAAkB,GAAG,MAA3B;AACP,OAAO,IAAMC,YAAY,GAAG,SAArB;;IAEDC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AADe,QAEPC,eAFO,GAE4CD,KAF5C,CAEPC,eAFO;AAAA,QAEUC,6BAFV,GAE4CF,KAF5C,CAEUE,6BAFV;;AAGf,QAAI,CAACD,eAAL,EAAsB;AAClBC,MAAAA,6BAA6B;AAChC;;AALc;AAMlB;;;;6BAEQ;AAAA,UACGD,eADH,GACuB,KAAKD,KAD5B,CACGC,eADH;;AAEL,UAAI,CAACA,eAAL,EAAsB;AAClB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAET,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAEI,gBAAb;AAA+B,QAAA,SAAS,EAAET,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAKU,kBAAL,SAAX;AAA0C,QAAA,SAAS,EAAEJ,qBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAKI,kBAAL,CAAX;AAAsC,QAAA,SAAS,EAAEF,wBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAKG,YAAL,CAAX;AAAgC,QAAA,SAAS,EAAEJ,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAEE,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;;;EAvByBV,KAAK,CAACiB,S;;AA0BpCJ,eAAe,CAACK,WAAhB,GAA8B,iBAA9B;AAEAL,eAAe,CAACM,SAAhB,GAA4B;AACxBJ,EAAAA,eAAe,EAAEV,SAAS,CAACe,IADH;AAExBJ,EAAAA,6BAA6B,EAAEX,SAAS,CAACgB,IAAV,CAAeC;AAFtB,CAA5B;AAKA,eAAevB,OAAO,CAAC,IAAD,CAAP,CAAcc,eAAd,CAAf","sourcesContent":["import {connect} from 'react-redux';\nimport React from 'react';\nimport MyProfile from \"../../containers/profile/MyProfileContainer\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {ROUTE_LOGIN} from \"../RootComponent\";\nimport OrganizationContainer from \"../../containers/organization/OrganizationContainer\";\nimport LogoutContainer from \"../../containers/auth/LogoutContainer\";\nimport AddOrganizationContainer from \"../../containers/organization/AddOrganizationContainer\";\n\nexport const ROUTE_MY_PROFILE = '/profile';\nexport const ROUTE_ORGANIZATION = '/org';\nexport const ROUTE_LOGOUT = '/logout';\n\nclass ProtectedRoutes extends React.Component {\n    constructor(props) {\n        super(props);\n        const { isAuthenticated, setIntendedPathAsRedirectPath } = props;\n        if (!isAuthenticated) {\n            setIntendedPathAsRedirectPath();\n        }\n    }\n\n    render() {\n        const { isAuthenticated } = this.props;\n        if (!isAuthenticated) {\n            return <Redirect to={ROUTE_LOGIN} />\n        }\n        return (\n            <Switch>\n                <Route path={ROUTE_MY_PROFILE} component={MyProfile} />\n                <Route path={`${ROUTE_ORGANIZATION}/:id`} component={OrganizationContainer} />\n                <Route path={`${ROUTE_ORGANIZATION}`} component={AddOrganizationContainer} />\n                <Route path={`${ROUTE_LOGOUT}`} component={LogoutContainer} />\n                <Redirect to={ROUTE_MY_PROFILE}/>\n            </Switch>\n        )\n    }\n}\n\nProtectedRoutes.displayName = 'ProtectedRoutes';\n\nProtectedRoutes.propTypes = {\n    isAuthenticated: PropTypes.bool,\n    setIntendedPathAsRedirectPath: PropTypes.func.isRequired\n};\n\nexport default connect(null)(ProtectedRoutes)\n"]},"metadata":{},"sourceType":"module"}